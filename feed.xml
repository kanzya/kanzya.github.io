<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://kanzya.github.io/</id><title>kanon</title><subtitle>A minimal, responsive, and powerful Jekyll theme for presenting professional writing.</subtitle> <updated>2024-04-02T19:50:53+09:00</updated> <author> <name>kanon</name> <uri>https://kanzya.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://kanzya.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://kanzya.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2024 kanon </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>ACSC 2023 crypto jenga</title><link href="https://kanzya.github.io/posts/jenga/" rel="alternate" type="text/html" title="ACSC 2023 crypto jenga" /><published>2024-04-02T00:00:00+09:00</published> <updated>2024-04-02T00:00:00+09:00</updated> <id>https://kanzya.github.io/posts/jenga/</id> <content src="https://kanzya.github.io/posts/jenga/" /> <author> <name>kanon</name> </author> <category term="writeup" /> <summary> Jenga この問題はAESをベースにした問題で変更点は2点あります。 ShiftRowsがhoriという関数に、MixColumnsがvertという関数に対応しています。（内容の差異は後で） 更に奇数ラウンドではhoriのみ使われ、逆に偶数ラウンドではvertが使われます。 AESの攻撃って 基本的にいろいろありますが、代表的なものとして、線形解読法(linear cryptanalysis)や差分解読法(different cryptanalysis)、SboxをAffineとしてlinearととらえるものがありますよね。 この問題では、AESで解析でよく用いられているsquare attackというものを用いて攻撃を行います。 注意としてこの問題では3×3の行列やアルゴリズムが異なるものを扱っている都合、AESとは一部攻撃方法が異なる部分があります。 ... </summary> </entry> <entry><title>最新版のsagemathとpythonのインストール</title><link href="https://kanzya.github.io/posts/install_sagemath/" rel="alternate" type="text/html" title="最新版のsagemathとpythonのインストール" /><published>2024-01-22T00:00:00+09:00</published> <updated>2024-01-22T00:00:00+09:00</updated> <id>https://kanzya.github.io/posts/install_sagemath/</id> <content src="https://kanzya.github.io/posts/install_sagemath/" /> <author> <name>kanon</name> </author> <category term="writeup" /> <summary> Sagemath SageMathは数学の幅広い処理を扱うソフトウェアである。扱う処理は計算機代数、組み合わせ、数値計算など多岐に及ぶ。工学的応用に加え基礎科学の研究も対応している。 よくCTFでつかうやつ 状況 2024年3月22日現在、Sagemathの最新版は10.3, pythonはpython3.12.2が安定バージョンでの最新みたいです。しかし、Ubuntuではsudo apt install sagemathでインストールすると9.5がインストールされるはずです。これはちょっとバージョンが古いので最新のSagemath10.3×python3.12.2で環境作っていきます。(私はpython3.12.0でやってしまったんですが、まぁ大丈夫かと…) 構築 必要なライブラリ一式をinstallしていきます。注意として、python3をinstallする前... </summary> </entry> <entry><title>MAPNACTF 2024</title><link href="https://kanzya.github.io/posts/MAPNACTF/" rel="alternate" type="text/html" title="MAPNACTF 2024" /><published>2024-01-22T00:00:00+09:00</published> <updated>2024-03-22T19:18:25+09:00</updated> <id>https://kanzya.github.io/posts/MAPNACTF/</id> <content src="https://kanzya.github.io/posts/MAPNACTF/" /> <author> <name>kanon</name> </author> <category term="writeup" /> <summary> MAPNACTF I participated in this CTF with team BunkyoWersterns. Our team got 1st place. I solved 5 crypto challs [Shibs, GLNQ, Be Fast, What next?, What next Ⅱ?] and I got 3 first blood, 1 second blood, 1 third blood. I felt interesting for all crypto chall, so I appreciate for organizer to hold this CTF event thx a lot!! Shibs [crypto 10 solves] chall #!/usr/bin/env python3 from Cryp... </summary> </entry> <entry><title>UofTCTF 2024</title><link href="https://kanzya.github.io/posts/UofTCTF/" rel="alternate" type="text/html" title="UofTCTF 2024" /><published>2024-01-14T00:00:00+09:00</published> <updated>2024-03-22T19:18:25+09:00</updated> <id>https://kanzya.github.io/posts/UofTCTF/</id> <content src="https://kanzya.github.io/posts/UofTCTF/" /> <author> <name>kanon</name> </author> <category term="writeup" /> <summary> UofTCTF 2024 Export Grade Cipher [crypto 10 solve] chall import ast import threading from exportcipher import * try: from flag import FLAG except: FLAG = "test{FLAG}" MAX_COUNT = 100 TIMEOUT = 120 # seconds def input_bytes(display_msg): m = input(display_msg) try: m = ast.literal_eval(m) except: # might not be valid str or bytes literal but could still b... </summary> </entry> <entry><title>cakectf 2023</title><link href="https://kanzya.github.io/posts/cakecft/" rel="alternate" type="text/html" title="cakectf 2023" /><published>2023-09-30T00:00:00+09:00</published> <updated>2024-03-22T19:18:25+09:00</updated> <id>https://kanzya.github.io/posts/cakecft/</id> <content src="https://kanzya.github.io/posts/cakecft/" /> <author> <name>kanon</name> </author> <category term="writeup" /> <summary> cakectf 2023 BunkyoWesternsに入れてもらったのでチームでやってました。 色々名言が生まれたので楽しかったです。 後買ってきたケーキをみんなで食べましたまる。 kanon on X: “cakectf終わったのでケーキ食べます https://t.co/Kj9xOJZACy” / X (twitter.com) simple signature 88 solve chall import os import sys from hashlib import sha512 from Crypto.Util.number import getRandomRange, getStrongPrime, inverse, GCD import signal flag = os.environ.get("FLAG", "neko{cat_does_not... </summary> </entry> </feed>
